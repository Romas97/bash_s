#!/bin/bash

#К счастью, sed позволяет нам самостоятельно задавать символы-разделители для
#использования их в команде замены. Разделителем считается первый символ, который
#будет встречен после s:

#$ sed 's!/bin/bash!/bin/csh!' /etc/passwd

#В данном случае в качестве разделителя использован восклицательный знак,
#в результате код легче читать и он выглядит куда опрятнее, чем прежде.

#Для выполнения нескольких действий с данными,
#используйте ключ -e при вызове sed. Например,
#вот как организовать замену двух фрагментов текста:

#$ sed -e 's/This/That/; s/test/another test/' ./myfile

#Или использовать клавишу enter:
#$ sed -e '
#> s/This/That/
#> s/test/another test/' ./myfile

#Если имеется множество команд sed, с помощью которых надо обработать текст,
#обычно удобнее всего предварительно записать их в файл.
#Для того, чтобы указать sed файл, содержащий команды, используют ключ -f:

#Вот содержимое файла mycommands:

#s/This/That/
#s/test/another test/

#Вызовем sed, передав редактору файл с командами и файл для обработки:

#$ sed -f mycommands myfile

#Флаги команды замены
#При передаче номера учитывается порядковый номер вхождения шаблона в строку,
#заменено будет именно это вхождение.

#Флаг g указывает на то, что нужно обработать все вхождения шаблона, имеющиеся
#в строке.

#Флаг p указывает на то, что нужно вывести содержимое исходной строки.

#Флаг вида w file указывает команде на то, что нужно записать результаты
#обработки текста в файл.

#Удаление строк
#Вызов команды выглядит так:

#$ sed '3d' myfile

#Вставка текста в поток

#С помощью sed можно вставлять данные в текстовый поток, используя команды i и a:

#Команда i добавляет новую строку перед заданной.
#Команда a добавляет новую строку после заданной.

#Рассмотрим пример использования команды i:

#$ echo "Another test" | sed 'i\First test '
#$ echo "Another test" | sed 'a\First test '

#Замена строк

#Команда c позволяет изменить содержимое целой строки текста в потоке данных.
#При её вызове нужно указать номер строки, вместо которой в поток надо добавить
#новые данные:

#$ sed '3c\This is a modified line.' myfile

#Замена символов

#Команда y работает с отдельными символами, заменяя их в соответствии с
#переданными ей при вызове данными:

#$ sed 'y/123/567/' myfile

#Вывод номеров строк

#Если вызвать sed, использовав команду =, утилита выведет номера строк в
#потоке данных:

#$ sed '=' myfile

#Чтение данных для вставки из файла

#Выше мы рассматривали приёмы вставки данных в поток, указывая то,
#что надо вставить, прямо при вызове sed. В качестве источника данных
#можно воспользоваться и файлом. Для этого служит команда r, которая
#позволяет вставлять в поток данные из указанного файла. При её вызове
#можно указать номер строки, после которой надо вставить содержимое файла,
#или шаблон.

#Рассмотрим пример:

#$ sed '3r newfile' myfile

#Пример

#Представим себе такую задачу. Есть файл, в котором имеется некая
#последовательность символов, сама по себе бессмысленная, которую надо
#заменить на данные, взятые из другого файла. А именно, пусть это будет
#файл newfile, в котором роль указателя места заполнения играет
#последовательность символов DATA. Данные, которые нужно подставить вместо DATA,
#хранятся в файле data.

#Решить эту задачу можно, воспользовавшись командами r и d потокового редактора
#sed:

#$ Sed '/DATA>/ {
#r newfile
#d}' myfile
